name: Create QA Release and Deploy

on:
  workflow_dispatch:
    inputs:
      next-release:
        description: "next tag to generate (of form X.YY.ZZZ)"
        required: true

jobs:
  gather-latest-tag:
    runs-on: ubuntu-latest
    outputs:
      last-tag: ${{ steps.last-tag.outputs.tag }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check Out Repo and Tag History
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get Last Tag
        id: last-tag
        run: |
          LAST_TAG=$(git tag --list --sort=-version:refname | head -n 1)
          echo ::set-output name=tag::$(echo $LAST_TAG)
          
  generate-changelog:
    runs-on: ubuntu-latest
    needs: [gather-latest-tag]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check Out Repo and Tag History
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # NOTE: for git log formatting %s=commit title, %h=shortened commit hash, %b=commit body, %n=new line
      - name: Generate Changelog
        id: generate-changelog
        run: |
          TZ='America/Lost_Angeles'; export TZ
          git config --global user.name "Quackals"
          git config --global user.email "nobody@qqcw.us"
          git checkout -b changelog/${{ github.event.inputs.next-release }}
          mv CHANGELOG.md CHANGELOG.md.temp
          echo "# Changes Released To Production" > CHANGELOG.md
          echo "---------------------------------" >> CHANGELOG.md
          echo "## Release ${{ github.event.inputs.next-release }}\n" >> CHANGELOG.md
          echo $(date "+%D %X") >> CHANGELOG.md
          git log ${{ needs.gather-latest-tag.outputs.last-tag }}..HEAD --merges --pretty=format:"  * ##### branch: %s%n  * hash: %h%n  * %b%n" | sed -r 's/Merge pull request \#[0-9]+ from//g' >> CHANGELOG.md
          cat CHANGELOG.md.temp | sed 's/\# Changes Released To Production//g'>> CHANGELOG.md
          rm CHANGELOG.md.temp
          git commit -am "Automated Changelog for Release ${{ github.event.inputs.next-release }}+0"
          git push -u origin changelog/${{ github.event.inputs.next-release }}
          gh pr create -B main -r amhauger -t "chore: Update Changelog to include release ${{ github.event.inputs.next-release }}"

  generate-release-images:
    runs-on: ubuntu-latest
    outputs:
      prod-version: ${{ steps.create-version-strings.outputs.prod-version }}
      qa-version: ${{ steps.create-version-strings.outputs.qa-version }}
      short-sha: ${{ steps.create-version-strings.outputs.short-sha }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check Out Repo and Tag History
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Setup Go module cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Configure Git for private modules
        run: git config --global url."git@github.com:".insteadOf "https://github.com/"

      - id: create-version-strings
        run: |
          G_REV=$(git rev-parse --short HEAD)
          echo ::set-output name=short-sha::$G_REV
          echo ::set-output name=qa-version::"qa-v${{ github.event.inputs.next-release }}p0-$G_REV"
          echo ::set-output name=prod-version::"v${{ github.event.inputs.next-release }}p0-$G_REV"

      - name: Build and Push QA Images
        id: build-qa-crm
        run: |
          docker build -q -f ./Dockerfile -t index.docker.io/ahauger/test-actions:${{ steps.create-version-strings.outputs.qa-version }} .
          docker push index.docker.io/ahauger/test-actions:${{ steps.create-version-strings.outputs.qa-version }}

      - name: Build and Push Release Images
        id: build-crm
        run: |
          docker build -q -f ./Dockerfile -t index.docker.io/ahauger/test-actions:${{ steps.create-version-strings.outputs.prod-version }} .
          docker push index.docker.io/ahauger/test-actions:${{ steps.create-version-strings.outputs.prod-version }}
          
  create-release-branch:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check Out Repo and Tag History
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Open `release/v${{ github.event.inputs.next-release }}` Branch
        id: open-release-branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        with:
          branch: release/v${{ github.event.inputs.next-release }}

  create-release-tag:
    runs-on: ubuntu-latest
    needs: [gather-latest-tag, generate-release-images]
    steps:
      - name: Check Out Repo and Tag History
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: |
          git log ${{ needs.gather-latest-tag.outputs.last-tag }}..HEAD --merges --pretty=format:"# %s%n## hash %h%n## %b%n" > body.md

      - name: Create Release Tag and Object
        uses: ncipollo/release-action@v1
        with: 
          token: ${{ secrets.GITHUB_TOKEN }}
          bodyFile: body.md
          artifacts: "release-v${{ github.event.inputs.next-release }}+0.tar.gz"
          commit: main
          tag: v${{ github.event.inputs.next-release }}+0-${{ needs.generate-release-images.outputs.short-sha }}
