name: Merge `hotfix` Branches

on:
  push:
    branches:
      - 'release/*'

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-branch-name.outputs.version }}

    steps:
      - name: Check Out Repo and Tag History
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get Branch Name (contains release version)
        id: get-branch-name
        run: |
          git branch --show-current | cut -d "/" -f2
          echo ::set-output name=version::$(git branch --show-current | cut -d "/" -f2)

  create-new-releases:
    runs-on: ubuntu-latest
    needs: [get-version]
    outputs:
      dockerhub-version: ${{ steps.version-tags.outputs.next-dh-version }}

    steps:
      - name: Check Out Repo and Tag History
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: version-tags
        run: |
          VERSION=""
          LAST_I_STRING=""
          NEW_I=""
          OLD_SHA=""

          LAST_BRANCH_TAG=$(git tag --list --sort=-version:refname "${{ needs.get-version.outputs.version }}+*" | head -n 1)
          CURRENT_SHA=$(git rev-parse --short HEAD)

          if [[ $LAST_BRANCH_TAG == *+*-* ]]
          then
            VERSION=$(git tag --list --sort=-version:refname "${{ needs.get-version.outputs.version}}+*" | head -n 1 | cut -d "+" -f1)
            LAST_I=$(git tag --list --sort=-version:refname "${{ needs.get-version.outputs.version }}+*" | head -n 1 | cut -d "+" -f2 | cut -d "-" -f1)
            NEW_I=$(( $LAST_I + 1 ))
            OLD_SHA=-$(git tag --list --sort=-version:refname "${{ needs.get-version.outputs.version }}+*" | head -n 1 | cut -d "+" -f2 | cut -d "-" -f2)
            LAST_I_STRING=+$LASTS_I
          elif [[ $last_branch_tag == *+* ]]
          then
            VERSION=$(git tag --list --sort=-version:refname "${{ needs.get-version.outputs.version}}+*" | head -n 1 | cut -d "+" -f1)
            LAST_I=$(git tag --list --sort=-version:refname "${{ needs.get-version.outputs.version }}+*" | head -n 1 | cut -d "+" -f2)
            NEW_I=$(( $LAST_I + 1 ))
            LAST_I_STRING=+$LAST_I
          else
            VERSION=$(git tag --list --sort=-version:refname "${{ needs.get-version.outputs.version}}*" | head -n 1)
          fi

          echo ::set-output name=next-gh-version::$VERSION+$NEW_I-$CURRENT_SHA
          echo ::set-output name=next-dh-version::$VERSION+$NEW_I-$CURRENT_SHA
          echo ::set-output name=changelog-version::$VERSION+$LAST_I_STRING$OLD_SHA

      - id: changes
        run: |
          git log ${{steps.version-tags.outputs.changelog-version}}..release/${{ needs.get-version.outputs.version }} --pretty=format:"# %s%n## hash %h%n## %b%n" > body.md

      - name: Create New Release Tag and Object
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "release-${{ steps.version-tags.outputs.next-gh-version }}"
          bodyFile: body.md
          tag: ${{ steps.version-tags.outputs.next-gh-version }}
